{"version":3,"sources":["connect.controller.js"],"names":[],"mappings":"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","file":"connect.controller-compiled.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/connects              ->  index\n * POST    /api/connects              ->  create\n * GET     /api/connects/:id          ->  show\n * PUT     /api/connects/:id          ->  update\n * DELETE  /api/connects/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Connect from './connect.model';\nimport YeelightBlue from 'yeelight-blue'\n\n// var async = require('async');\n// var noble = require('noble');\n//\n//\n//\n// noble.on('stateChange', function(state) {\n//   if (state === 'poweredOn')\n//     noble.startScanning([], true);\n//   else\n//     noble.stopScanning();\n// });\n//\n// noble.on('discover', peripheral => {\n//   console.info(peripheral);\n//   peripheral.connect(err => {\n//     if (err) return err;\n//     console.info(Utf8ArrayToStr(peripheral.advertisement.manufacturerData));\n//     peripheral.discoverAllServicesAndCharacteristics((error, services, characteristics) => {\n//       if (error) return error;\n//       console.info(services)\n//       console.info(characteristics)\n//     })\n//   })\n// });\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Connect to Yeelight\nexport function index(req, res) {\n  console.info('discovering yeelight...')\n\n  YeelightBlue.discover( yeelightBlue => {\n    console.info('yeelight found, trying to connect...')\n    var red        = 255; // 0 - 255\n    var green      = 0; // 0 - 255\n    var blue       = 0; // 0 - 255\n    var brightness = 100; // 0 - 100\n\n    yeelightBlue.connectAndSetUp(err => {\n      if (err) return console.error(err);\n      console.info('connect successful!')\n      yeelightBlue.setColorAndBrightness(red, green, blue, brightness, (err) => {\n        if (err) console.error(err);\n        console.info(`color changed to: red: ${red} green: ${green} blue: ${blue} with brightness: ${brightness}`)\n      });\n    })\n    yeelightBlue.on('stateChange',function(){\n      console.info('connect successful!')\n    })\n    yeelightBlue.on('connected',function(){\n      console.info('connect successful!')\n    })\n  });\n\n}\n\n// Gets a single Connect from the DB\nexport function show(req, res) {\n  return Connect.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Connect in the DB\nexport function create(req, res) {\n  return Connect.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Connect in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Connect.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Connect from the DB\nexport function destroy(req, res) {\n  return Connect.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}