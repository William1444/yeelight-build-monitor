{"version":3,"sources":["result.controller.js"],"names":[],"mappings":"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","file":"result.controller-compiled.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/results              ->  index\n * POST    /api/results              ->  create\n * GET     /api/results/:id          ->  show\n * PUT     /api/results/:id          ->  update\n * DELETE  /api/results/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Result from './result.model';\nimport YeelightBlue from 'yeelight-blue';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nexport function log(req, res, next) {\n  // console.info(req.body)\n  next();\n}\n\n// Gets a list of Results\nexport function index(req, res) {\n  return Result.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Result from the DB\nexport function show(req, res) {\n  return Result.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Result in the DB if it is failing\nexport function create(req, res) {\n  var jobName = req.body.name;\n  var jobStatus = req.body.build && req.body.build.status;\n  console.info(req.body.build && req.body.build.status)\n  console.info(`job ${jobName} has status ${jobStatus}`);\n  Result.findOne({name: jobName}).exec()\n    .then(updateResultsArray(res, jobName, jobStatus))\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\nexport function updateResultsArray(res, jobName, jobStatus){\n  return function(entity) {\n    if (jobStatus === 'SUCCESS') {\n      console.info(entity)\n      if (entity) {\n        console.info('successful build in the array of failing jobs so removing it')\n        return entity.remove();\n      } else {\n        console.info('no entity found and successful so not needed in the array of failing jobs')\n        res.status(200).end();\n        return null;\n      }\n    } else {\n      if (entity) {\n        console.info('already in the array if failing jobs')\n        res.status(200).end();\n        return null;\n      } else {\n        console.info('not in the array of failing jobs so adding it')\n        return Result.create({name: jobName})\n      }\n    }\n  }\n}\n\n// Updates an existing Result in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Result.find(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Result from the DB\nexport function destroy(req, res) {\n  return Result.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}