{"version":3,"sources":["index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAjB;;AAEA,IAAI,iBAAiB;AACnB,SAAO,kBADY;AAEnB,QAAM,iBAFa;AAGnB,UAAQ,mBAHW;AAInB,UAAQ,mBAJW;AAKnB,WAAS;AALU,CAArB;;AAQA,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EADU;AAEf,OAAK,MAAM,GAAN,EAFU;AAGf,SAAO,MAAM,GAAN,EAHQ;AAIf,QAAM,MAAM,GAAN,EAJS;AAKf,UAAQ,MAAM,GAAN;AALO,CAAjB;;;AASA,IAAI,cAAc,WAAW,YAAX,EAAyB;AACzC,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP;AACD;AAHQ,GAD8B;AAMzC,yBAAuB;AANkB,CAAzB,CAAlB;;AASA,SAAS,oBAAT,EAA+B,YAAW;;AAExC,KAAG,0CAAH,EAA+C,YAAW;AACxD,gBAAY,MAAZ,CAAmB,KAAnB,CAAyB,UAAzB;AACD,GAFD;;AAIA,WAAS,kBAAT,EAA6B,YAAW;;AAEtC,OAAG,yCAAH,EAA8C,YAAW;AACvD,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,kBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,sBAAT,EAAiC,YAAW;;AAE1C,OAAG,wCAAH,EAA6C,YAAW;AACtD,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,iBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,mBAAT,EAA8B,YAAW;;AAEvC,OAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAW,IAAX,CACG,QADH,CACY,GADZ,EACiB,mBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,sBAAT,EAAiC,YAAW;;AAE1C,OAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,mBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,wBAAT,EAAmC,YAAW;;AAE5C,OAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAW,KAAX,CACG,QADH,CACY,MADZ,EACoB,mBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,yBAAT,EAAoC,YAAW;;AAE7C,OAAG,2CAAH,EAAgD,YAAW;AACzD,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,oBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec-compiled.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar resultCtrlStub = {\n  index: 'resultCtrl.index',\n  show: 'resultCtrl.show',\n  create: 'resultCtrl.create',\n  update: 'resultCtrl.update',\n  destroy: 'resultCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar resultIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './result.controller': resultCtrlStub\n});\n\ndescribe('Result API Router:', function() {\n\n  it('should return an express router instance', function() {\n    resultIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/results', function() {\n\n    it('should route to result.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'resultCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/results/:id', function() {\n\n    it('should route to result.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'resultCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/results', function() {\n\n    it('should route to result.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'resultCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/results/:id', function() {\n\n    it('should route to result.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'resultCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/results/:id', function() {\n\n    it('should route to result.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'resultCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/results/:id', function() {\n\n    it('should route to result.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'resultCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}